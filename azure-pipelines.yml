trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 8.1

jobs:
- job: Michael_Sutjiato_Tests
  steps:
  - script: |
      sudo update-alternatives --set php /usr/bin/php$(phpVersion)
      sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
      sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
      sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
      sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
      php -version
    displayName: 'Use PHP version $(phpVersion)'

  - script: composer install --no-interaction --prefer-dist
    displayName: 'Install Composer dependencies'

  - script: |
      # Create dummy config files to prevent init.php from failing
      mkdir -p config
      echo "<?php define('SITE_URL', 'http://localhost'); ?>" > config/config.php
      echo "<?php class Database { public function __construct() {} public function connect() { return \$this; } public function beginTransaction() {} public function rollBack() {} public function fetchAll(\$sql, \$params = []) { return []; } public function fetch(\$sql, \$params = []) { return null; } public function query(\$sql, \$params = []) {} public function lastInsertId() { return 1; } public function createDatabaseIfNotExists() {} } ?>" > config/database.php
    displayName: 'Create dummy config files'

  - script: ./vendor/bin/phpunit --testsuite "Michael_Sutjiato_Tests" --log-junit "junit-michael.xml"
    displayName: "Run Michael Sutjiato's Tests"
    # This allows the next step to run even if tests fail, which helps with debugging.
    continueOnError: true

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit-michael.xml'
      testRunTitle: "Michael Sutjiato's Test Results"
    condition: succeededOrFailed()